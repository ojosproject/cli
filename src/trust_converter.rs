// trust_converter
// Ojos Project
// 
// T(ypescript)Rust converting -- converts Rust structs into TypeScript types.


/*
! Requirements

- Ensure it has the conversion date sent in. Include git commit.
- Actual conversion.
*/

use std::{env, fs, path::Path};
use chrono::{Datelike, Local, Timelike};

pub fn convert(input: String, output: String) {
    let input_dir = env::current_dir().expect("Could not find current dir.").join(input);
    let output_dir = env::current_dir().expect("Could not find current dir.").join(output);

    let t = Local::now();

    let month = match t.month0() {
        0 => "January",
        1 => "February",
        2 => "March",
        3 => "April",
        4 => "May",
        5 => "June",
        6 => "July",
        7 => "August",
        8 => "September",
        9 => "October",
        10 => "November",
        11 => "December",
        _ => "Month not known..."
    };

    let mut out = String::from(format!("// types.ts\n// Ojos Project\n\n// Autogenerated on {month} {day}, {year} on {hour}:{minute} {am_pm}.\n", year = t.year(), month = month, day = t.day(), hour = t.hour12().1, minute = t.minute(), am_pm = if t.hour12().0  {"PM"}  else {"AM"}));

    for token in fs::read_to_string(input_dir).expect("Could not read file Rust file").split("") {
        match token {
            "struct" => {
                out.push_str("export type ")
            }
            
            _ => {}
        }
    }

    fs::write(output_dir, out).expect("Failed to write output.");
}
